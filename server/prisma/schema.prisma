// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int        @id @default(autoincrement())
  email    String     @unique
  password String
  name     String
  comments Comment[]
  ratings  Rating[]
  educator Educator[]
}

model Educator {
  id          Int               @id @default(autoincrement())
  name        String
  description String
  courses     Course[]

  author   User @relation(fields: [authorId], references: [id])
  authorId Int
}

model Course {
  id          Int             @id @default(autoincrement())
  title       String
  description String
  price       Float
  comments    Comment[]
  ratings     Rating[]
  tags        TagsOnCourses[]

  educator   Educator @relation(fields: [educatorId], references: [id])
  educatorId Int
}

model Tag {
  id   Int    @id @default(autoincrement())
  name String

  courses   TagsOnCourses[]
}

model TagsOnCourses {
  course   Course @relation(fields: [courseId], references: [id])
  courseId Int
  tag      Tag    @relation(fields: [tagId], references: [id])
  tagId    Int

  @@id([courseId, tagId])
}

model Comment {
  id   Int    @id @default(autoincrement())
  text String

  course   Course @relation(fields: [courseId], references: [id])
  courseId Int
  user     User   @relation(fields: [userId], references: [id])
  userId   Int
}

model Rating {
  id    Int @id @default(autoincrement())
  value Int

  course   Course @relation(fields: [courseId], references: [id])
  courseId Int
  user     User   @relation(fields: [userId], references: [id])
  userId   Int
}
